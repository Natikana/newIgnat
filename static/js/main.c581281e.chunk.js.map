{"version":3,"sources":["p2-homeworks/h5-rrd-v6/Header.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5-rrd-v6/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5-rrd-v6/pages/PreJunior.tsx","p2-homeworks/h5-rrd-v6/pages/Junior.tsx","p2-homeworks/h5-rrd-v6/pages/SuperJunior.tsx","p2-homeworks/h5-rrd-v6/Pages.tsx","p2-homeworks/h5-rrd-v6/Header.tsx","p2-homeworks/h5-rrd-v6/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Message","props","avatar","name","message","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","key","btnName","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","className","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","HW3","setUsers","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","alert","setChecked","column","testSpanError","blue","disabled","PreJunior","Junior","SuperJunior","PATH","Pages","path","element","to","Header","act","setAct","cl","hidden_menu","active","link","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c581281e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden_menu\":\"Header_hidden_menu__1YL19\",\"active\":\"Header_active__3OvYh\",\"link\":\"Header_link__1a3CR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__ImDLw\",\"column\":\"HW4_column__12MOB\",\"testSpanError\":\"HW4_testSpanError__2xtNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2k1eO\",\"errorInput\":\"SuperInputText_errorInput__3_HSS\",\"error\":\"SuperInputText_error__316fP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__HgEAi\",\"red\":\"SuperButton_red__2I0SU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3eOhN\",\"spanClassName\":\"SuperCheckbox_spanClassName__1wj0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3IXX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2D2wQ\",\"error\":\"Greeting_error__28yYc\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nexport type MessageInfoProps = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props:MessageInfoProps) {\n    return (\n        <div>\n            <span>{props.avatar}</span>\n            <span>{props.name}</span>\n            <span>{props.message}</span>\n            <span>{props.time}</span>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div>\n            // show some text\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { /// need to fix any\n    data: AffairType[]\n    setFilter: (string:FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = (btnName:FilterType) => {\n        props.setFilter(btnName)\n    } // need to fix\n    const setHigh = (btnName:FilterType) => {props.setFilter(btnName)}\n    const setMiddle = (btnName:FilterType) => {props.setFilter(btnName)}\n    const setLow = (btnName:FilterType) => {props.setFilter(btnName)}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={()=>setAll('all')}>All</button>\n            <button onClick={()=>setHigh('high')}>High</button>\n            <button onClick={()=>setMiddle('middle')}>Middle</button>\n            <button onClick={()=>setLow('low')}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\n//export type AffairType = any // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ /// need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { /// need to fix any\n    if (filter === 'high') return  affairs.filter(el => el.priority === filter)\n    if (filter === 'low') return  affairs.filter(el => el.priority === filter)\n    if (filter === 'middle') return  affairs.filter(el => el.priority === filter)\n    //if (filter === 'all') return affairs\n    else return affairs // need to fix\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { /// need to fix any\n    return affairs.filter(el => el._id !== _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) /// need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: null | string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\n\ntype GreetingContainerPropsType = {\n    users: Array<string> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<null | string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        if (name !== '') {\n            addUserCallback(name)\n            setName('')\n        }\n        else {\n            setError('add user,please')\n        }\n        //alert(`Hello  !`) // need to fix\n    }\n\n    const totalUsers =  users.length// need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<string>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([...users,name]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''} ` /// need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e)\n        onChangeChecked // если есть пропс onChange\n        && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n        // const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked) onChange\n        //const [checked, setChecked] = useState<boolean>(false) onChangeChecked  setChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nexport function PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\n\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'/**/\n\nexport function Junior() {\n    return (\n        <div>\n            {/*<HW7/>*/}\n            {/*<HW8/>*/}\n            {/*<HW9/>*/}\n            {/*<HW10/>*/}\n            {/*<HW11/>*/}\n\n        </div>\n    )\n}\n\n\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nexport function SuperJunior() {\n    return (\n        <div>\n            {/*<HW12/>*/}\n        </div>\n    )\n}\n\n\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Navigate, Route, Routes} from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\nimport {PreJunior} from \"./pages/PreJunior\";\nimport {Junior} from \"./pages/Junior\";\nimport {SuperJunior} from \"./pages/SuperJunior\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    SUPER_JUNIOR: '/super-junior'\n}\n\nfunction Pages() {\n    return (\n        <div >\n            Routes выбирает первый подходящий роут\n            <Routes>\n\n                в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\n                <Route path={'/'} element={<Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\n                <Route path={PATH.SUPER_JUNIOR} element={<SuperJunior/>}/>\n\n                он отрисуется если пользователь захочет попасть на несуществующую страницу\n                <Route path={'/*'} element={<Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Pages\n","import React, {useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Pages\";\nimport cl from \"./Header.module.css\"\n\n\nfunction Header() {\n    const [act, setAct] = useState(true)\n    return (\n        <div onClick={() => {setAct(!act)}} className={ act ? cl.hidden_menu  : `${cl.hidden_menu} ${cl.active}` }>\n            <NavLink className={cl.link} to={PATH.PRE_JUNIOR}>Pre-junior</NavLink>\n            <NavLink className={cl.link} to={PATH.JUNIOR}> Junior </NavLink>\n            <NavLink className={cl.link} to={PATH.SUPER_JUNIOR}>Super-junior </NavLink>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Pages from './Pages'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Pages/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5-rrd-v6/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}